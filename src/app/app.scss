// http://ionicframework.com/docs/theming/

// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.


@font-face{
  font-family: Marvel;
  src: url('../assets/fonts/Marvel/Marvel-Regular.ttf')
}

*{
  font-family: Marvel;

  ion-header ion-icon.back-button-icon.icon {
    color: #222;
  }
  ion-header ion-icon.bar-button-icon.icon {
    color: #222;
  }

}

//Card-Colors

$kommunikation:    #46577B;
$kommunikation-hover: #79a1db;
$arbeitsmittel:   #550C35;
$arbeitsmittel-hover: #db1d8b;
$arbeitsplatz: #98201A;
$arbeitsplatz-hover: #db2822;
$bleibTapfer: #106146;
$bleibTapfer-hover: #21db9c;
$informationsbeschaffung: #D27618;
$informationsbeschaffung-hover: #fd9c18;
$perspektivwechsel: #102326;
$perspektivwechsel-hover: #346c78;
$stellDirVor: #D292AD;
$stellDirVor-hover: #fdd2eb;
$joker: #ffcb05;

.splash {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 999;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #76B900;
}

.spinner {
  width: 40px;
  height: 40px;
  background-color: #333;

  margin: 100px auto;
  -webkit-animation: sk-rotateplane 1.2s infinite ease-in-out;
  animation: sk-rotateplane 1.2s infinite ease-in-out;
}

@-webkit-keyframes sk-rotateplane {
  0% { -webkit-transform: perspective(120px) }
  50% { -webkit-transform: perspective(120px) rotateY(180deg) }
  100% { -webkit-transform: perspective(120px) rotateY(180deg)  rotateX(180deg) }
}

@keyframes sk-rotateplane {
  0% {
    transform: perspective(120px) rotateX(0deg) rotateY(0deg);
    -webkit-transform: perspective(120px) rotateX(0deg) rotateY(0deg)
  } 50% {
      transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);
      -webkit-transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg)
    } 100% {
        transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);
        -webkit-transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);
      }
}
